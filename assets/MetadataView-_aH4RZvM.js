import{d as j,p as ee,r as P,o,c as n,e,a as _,t as N,i as x,n as I,f as M,z as oe,q as O,A as R,T as ie,F as C,_ as ne,B as Z,s as J,l as H,x as T,y as E,k as s,h as B,v as q,C as de,D as ue,b as le,E as ce,G as me,H as pe,I as he,J as _e,m as fe,K as ge,u as ve}from"./app-woDiZANq.js";import{u as Y,r as V,e as be,c as L,m as re,a as ye}from"./index-DkZguShw.js";const $e={class:"message"},ke={class:"message-body"},we=e("p",null,[M(" Need to update an existing metadata file or continue working on it? Use the upload field below to upload an existing "),e("span",{class:"is-italic"},"metadata.json"),M(" file and prefill available values. ")],-1),xe={class:"file mt-2 has-name"},Se={class:"file-label"},Ce={class:"file-cta"},Ne={class:"file-icon"},De=e("span",{class:"file-label"}," Choose a file ",-1),je={key:0,class:"file-name is-flex is-align-items-center"},Ie={key:0,class:"notification is-danger is-light mb-3 mt-2"},Ae={class:"is-flex mt-2"},Ue=e("p",{class:"mt-2 is-size-7"},[e("span",{class:"has-text-weight-bold"},"WARNING:"),M(" If you have already filled out the form on here, this will reset it and replace all existing values with values from the provided file. ")],-1),Be={__name:"FileUpload",emits:["uploadSuccess","uploadCancel"],setup(t,{emit:i}){const d=i,{uploadMetadataForm:c}=F(),p=j(null),k=j("");j("");const h=j(!1),m=ee(()=>{var g;return(g=p.value)==null?void 0:g.name}),a=g=>{p.value=g.target.files[0]},f=g=>{p.value=null,d("uploadCancel")},v=async()=>{h.value=!0,await oe(500);const g=new FileReader;g.onload=async D=>{try{const b=JSON.parse(D.target.result);await c(b),d("uploadSuccess")}catch(b){b instanceof SyntaxError?k.value=`There was an issue parsing ${p.value.name}. Please make sure you are uploading a valid JSON file.`:k.value=b.message}finally{h.value=!1}},g.readAsText(p.value)};return(g,D)=>{const b=P("font-awesome-icon");return o(),n("article",$e,[e("div",ke,[we,e("div",xe,[e("label",Se,[e("input",{class:"file-input",type:"file",name:"metadata",onChange:a,accept:".json,application/json"},null,32),e("span",Ce,[e("span",Ne,[_(b,{icon:"fa-solid fa-upload"})]),De])]),m.value?(o(),n("span",je,N(m.value),1)):x("",!0)]),k.value?(o(),n("div",Ie,[e("p",null,"Your form could not be prefilled: "+N(k.value)+". Please submit a valid metadata.json file.",1)])):x("",!0),e("div",Ae,[e("button",{class:"button is-danger mr-2 is-small",onClick:f},"Cancel"),m.value?(o(),n("button",{key:0,class:I(["button is-info is-small",{"is-loading":h.value}]),onClick:v},"Prefill",2)):x("",!0)]),Ue])])}}},Fe=e("p",{class:"mb-2"}," The following form helps you submit your dataset to DataHub by automatically generating the necessary metadata file to be included with your project. ",-1),Ve=e("p",{class:"mb-2"}," This form will take several minutes to complete and will require you to provide information about all the files included in your project. Hence, this form should only be used after you have already gained approval via the initial Submission Form. If you have not already received approval, then you will have no way to submit your project and your metadata file will not be accepted. ",-1),Te=e("p",{class:"mb-2"}," Please confirm that you have already submitted initial information about your dataset and have received approval to generate the metadata form and continue with your submission. ",-1),Pe={class:"is-flex is-justify-content-space-between mt-4"},Ee={class:"mt-4"},Me={key:1,class:"notification is-success is-light"},Oe=e("p",null,"Available fields have been prefilled. Click confirm to continue.",-1),ze=[Oe],Re={__name:"ConfirmSubmission",setup(t){const{setConfirmationStatus:i,markCompletedAndNextStep:d}=F(),c=j(!1),p=()=>c.value=!1,k=j(!1),h=()=>{c.value=!1,k.value=!0},m=()=>{i(!0),d()};return(a,f)=>(o(),n(C,null,[Fe,Ve,Te,e("div",Pe,[e("button",{class:"button is-light",onClick:f[0]||(f[0]=v=>c.value=!0)},"Upload"),e("button",{class:"button is-primary",onClick:m},"Confirm")]),_(ie,{"enter-active-class":"transition duration-200 ease-out","enter-from-class":"transform scale-95 opacity-0","enter-to-class":"transform scale-100 opacity-100","leave-active-class":"transition duration-150 ease-out","leave-from-class":"transform scale-100 opacity-100","leave-to-class":"transform scale-95 opacity-0"},{default:O(()=>[e("div",Ee,[c.value?(o(),R(Be,{key:0,onUploadCancel:p,onUploadSuccess:h})):x("",!0),k.value?(o(),n("div",Me,ze)):x("",!0)])]),_:1})],64))}},Le={key:0,class:"message-body"},Je={__name:"Accordian",props:{isOpen:Boolean,hasBoxShadow:Boolean},setup(t){const i=t,d=j(i.isOpen),c=()=>d.value=!d.value;return(p,k)=>{const h=P("font-awesome-icon");return o(),n("article",{class:I(["message",{"has-box-shadow":i.hasBoxShadow}])},[e("a",{class:I(["message-header has-background-grey-lighter has-text-dark no-text-decoration",{"has-content-hidden":!d.value}]),onClick:k[0]||(k[0]=m=>c())},[Z(p.$slots,"title",{},void 0,!0),d.value?(o(),R(h,{key:0,icon:"fa-solid fa-caret-up"})):(o(),R(h,{key:1,icon:"fa-solid fa-caret-down"}))],2),_(ie,{"enter-active-class":"transition duration-200 ease-out","enter-from-class":"transform scale-95 opacity-0","enter-to-class":"transform scale-100 opacity-100","leave-active-class":"transition duration-150 ease-out","leave-from-class":"transform scale-100 opacity-100","leave-to-class":"transform scale-95 opacity-0"},{default:O(()=>[d.value?(o(),n("div",Le,[Z(p.$slots,"body",{},void 0,!0)])):x("",!0)]),_:3})],2)}}},He=ne(Je,[["__scopeId","data-v-78e842d6"]]),Ye=e("p",{class:"mb-2"}," First, provide some general project information that will be associated with your submission. Feel free to copy this information from your initial submission form. ",-1),qe=e("hr",null,null,-1),Ge={class:"field"},Ke=e("label",{class:"label mb-0"},"Publisher",-1),We=e("p",{class:"help mt-0 mb-2"}," Who is the publishing organization responsible for this dataset? This is likely to be the name of the company or governmental agency that created the dataset. ",-1),Ze={class:"control has-icons-left has-icons-right"},Xe=["aria-invalid"],Qe={class:"icon is-small is-left"},et={key:0,class:"icon is-small is-right"},tt={key:1,class:"icon is-small is-right"},st=e("label",{class:"label mb-0"},"JPO Project Manager",-1),at=e("p",{class:"help mb-2 mt-0"}," Who is your JPO Project Manager? They will be the point of contact for your project on ITS DataHub. ",-1),ot={class:"field is-horizontal"},it={class:"field-body"},nt={class:"field"},lt={class:"control has-icons-left has-icons-right"},ct=["aria-invalid"],rt={class:"icon is-small is-left"},dt={key:0,class:"icon is-small is-right"},ut={key:1,class:"icon is-small is-right"},mt={class:"field"},pt={class:"control has-icons-left has-icons-right"},ht=["aria-invalid"],_t={class:"icon is-small is-left"},ft={key:0,class:"icon is-small is-right"},gt={key:1,class:"icon is-small is-right"},vt={key:0,class:"notification is-danger is-light mb-3"},bt=e("p",null,"Your changes could not be saved. Please make sure you have filled out every field.",-1),yt=[bt],$t={class:"field is-grouped is-grouped-right"},kt={class:"control"},wt=e("button",{class:"button is-primary",type:"submit"},"Save and Continue",-1),xt={__name:"ProjectInformation",setup(t){const i=F(),{projectInformation:d}=J(i),{markCompletedAndNextStep:c,setProjectInformation:p,previousStep:k}=i,h=j({});H(()=>{h.value={...d.value}});const a=Y({publisher:{required:V},contactName:{required:V},contactEmail:{required:V,email:be}},h),f=D=>!D.$invalid&&D.$dirty,v=j(!1),g=async()=>{if(a.value.$validate(),a.value.$invalid)v.value=!0;else try{p(h.value),c()}catch(D){console.log(D),v.value=D}};return(D,b)=>{const S=P("font-awesome-icon");return o(),n(C,null,[Ye,qe,e("form",{onSubmit:q(g,["prevent"]),onKeyup:de(g,["enter"])},[e("div",Ge,[Ke,We,e("div",Ze,[T(e("input",{class:I(["input",{"is-danger":s(a).publisher.$error,"is-success":f(s(a).publisher)}]),type:"text",placeholder:"Name of publisher","onUpdate:modelValue":b[0]||(b[0]=u=>s(a).publisher.$model=u),onBlur:b[1]||(b[1]=(...u)=>s(a).publisher.$touch&&s(a).publisher.$touch(...u)),"aria-invalid":s(a).publisher.$error},null,42,Xe),[[E,s(a).publisher.$model]]),e("span",Qe,[_(S,{icon:"fa-solid fa-building"})]),s(a).publisher.$error?(o(),n("span",et,[_(S,{icon:"fa-solid fa-exclamation-circle"})])):x("",!0),f(s(a).publisher)?(o(),n("span",tt,[_(S,{icon:"fa-solid fa-check"})])):x("",!0)]),(o(!0),n(C,null,B(s(a).publisher.$errors,u=>(o(),n("p",{class:"help is-danger",key:u.$uid},N(u.$message),1))),128))]),st,at,e("div",ot,[e("div",it,[e("div",nt,[e("p",lt,[T(e("input",{class:I(["input",{"is-danger":s(a).contactName.$error,"is-success":f(s(a).contactName)}]),type:"text",placeholder:"Name of project manager","onUpdate:modelValue":b[2]||(b[2]=u=>s(a).contactName.$model=u),onBlur:b[3]||(b[3]=(...u)=>s(a).contactName.$touch&&s(a).contactName.$touch(...u)),"aria-invalid":s(a).contactName.$error},null,42,ct),[[E,s(a).contactName.$model]]),e("span",rt,[_(S,{icon:"fa-solid fa-user"})]),s(a).contactName.$error?(o(),n("span",dt,[_(S,{icon:"fa-solid fa-exclamation-circle"})])):x("",!0),f(s(a).contactName)?(o(),n("span",ut,[_(S,{icon:"fa-solid fa-check"})])):x("",!0)]),(o(!0),n(C,null,B(s(a).contactName.$errors,u=>(o(),n("p",{class:"help is-danger",key:u.$uid},N(u.$message),1))),128))]),e("div",mt,[e("p",pt,[T(e("input",{class:I(["input",{"is-danger":s(a).contactEmail.$error,"is-success":f(s(a).contactEmail)}]),type:"text",placeholder:"Email of project manager","onUpdate:modelValue":b[4]||(b[4]=u=>s(a).contactEmail.$model=u),onBlur:b[5]||(b[5]=(...u)=>s(a).contactEmail.$touch&&s(a).contactEmail.$touch(...u)),"aria-invalid":s(a).contactEmail.$error},null,42,ht),[[E,s(a).contactEmail.$model]]),e("span",_t,[_(S,{icon:"fa-solid fa-envelope"})]),s(a).contactEmail.$error?(o(),n("span",ft,[_(S,{icon:"fa-solid fa-exclamation-circle"})])):x("",!0),f(s(a).contactEmail)?(o(),n("span",gt,[_(S,{icon:"fa-solid fa-check"})])):x("",!0)]),(o(!0),n(C,null,B(s(a).contactEmail.$errors,u=>(o(),n("p",{class:"help is-danger",key:u.$uid},N(u.$message),1))),128))])])]),v.value&&!f(s(a))?(o(),n("div",vt,yt)):x("",!0),e("div",$t,[e("p",kt,[e("button",{class:"button is-warning mr-2",onClick:b[6]||(b[6]=u=>s(k)())},"Back"),wt])])],32)],64)}}};var te={name:"ValidateEach",props:{rules:{type:Object,required:!0},state:{type:Object,required:!0},options:{type:Object,default:()=>({})},index:{type:Number,default:0}},setup(t,i){let{slots:d}=i;const c=Y(t.rules,ue(t,"state"),t.options);return()=>d.default({v:c.value})}};let G;const St=new Uint8Array(16);function Ct(){if(!G&&(G=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!G))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return G(St)}const A=[];for(let t=0;t<256;++t)A.push((t+256).toString(16).slice(1));function Nt(t,i=0){return A[t[i+0]]+A[t[i+1]]+A[t[i+2]]+A[t[i+3]]+"-"+A[t[i+4]]+A[t[i+5]]+"-"+A[t[i+6]]+A[t[i+7]]+"-"+A[t[i+8]]+A[t[i+9]]+"-"+A[t[i+10]]+A[t[i+11]]+A[t[i+12]]+A[t[i+13]]+A[t[i+14]]+A[t[i+15]]}const Dt=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),ae={randomUUID:Dt};function se(t,i,d){if(ae.randomUUID&&!i&&!t)return ae.randomUUID();t=t||{};const c=t.random||(t.rng||Ct)();return c[6]=c[6]&15|64,c[8]=c[8]&63|128,Nt(c)}const K=()=>({id:se(),name:"",description:"",type:""}),X=()=>({id:se(),name:"",datasets:[]}),Q=()=>({id:se(),title:"",fileName:"",description:""}),jt=["flow data","traffic flow","volume data","loop detector","speed-flow-density data","traffic detectors","occupancy data","speed data","vehicle data","vehicle situation data","vehicle awareness device","signal phase and timing","signal phasing and timing","intersection situation data","next generation simulation","transit signal priority","freight signal priority","pedestrian detection","pedestrian in crosswalk warning","multi-modal intelligent traffic signal system","multi-modal intelligent traffic signal systems","trajectory conversion algorithm","real time kinematic","probe vehicle data","trajectories","travel time","travel time data","trip","first mile last mile","multi-modal trip planning","multi-modal trip planning application","traveler information message","traveler situation data","queue warning","incident data","crash prevention and safety","incident management","lane closure","lane restrictions","road maintenance","work zone data exchange","work zones","work-zone data exchange specification","texas dot work zone data","smart work zones","road conditions","precipitation data","weather","weather data","simulated road weather","road weather demonstration","road weather management","environment sensor stations","application message","basic mobility control message","basic mobility message","basic safety message","connected vehicle data","connected vehicle environment","connected vehicle message","connected equipment","connected vehicle","connected vehicles","on-board equipment","on-board unit","road side unit","roadside equipment","dedicated short range communication","probe data control message","probe data message","vehicle to infrastructure","vehicle to vehicle","map","parking meters","event parking management","parking sensors","interview data","survey data","multi-modal intelligent traffic signal system","multi-modal intelligent traffic signal systems"],It=le('<p class="mb-2"> Please provide the some basic information about all the main datasets in your project. On the next page, you will identify the columns in each of these datasets. </p><p class="mb-2"><span class="has-text-weight-bold">Warning:</span> to use the automated submission process, your dataset must be one of the accepted file types below. </p><hr><label class="label">Valid Dataset File Types</label><p class="help"> If your file is not one of these file types, please continue over email to submit your project. Parseable file types are: Comma-separated values (CSV), Tab-separated values (TSV), Microsoft Excel (XLS), Microsoft Excel (OpenXML), ZIP archive (shapefile), JSON format (GeoJSON), GeoJSON format, Keyhole Markup Language (KML), Zipped Keyhole Markup Language (KMZ) </p><label class="label mt-2">Creating Multiple Datasets</label><p class="help"> Many projects only have one main dataset. However, some may have multiple main datasets that they want to make visible independently on ITS DataHub. An example of this may be if you have different datasets generated for each trial in a project. Each dataset should be able to stand alone as its own entry on ITS DataHub, so the name and file name should be unique. </p><p class="help is-italic"> Example Dataset: First Experiment (first-experiment.xlsx) </p><label class="label mt-2">Describing Your Dataset</label><p class="help"> You should provide a brief description of the data being made available and a background on the project that generated the data. If multiple files are being provided as part of a single dataset, provide a brief description on how they are related to each other. Please provide sufficient detail and information for a third party to easily understand the submitted data. </p><p class="help is-italic"> Example Description: This dataset contains data collected from the first Connected Vehicle (CV) prototype demonstration conducted on I-81 in Virginia. 53 vehicles and 21 trucks that regularly traverse the highway were equipped with aftermarket on-board units (OBUs) to generate Basic Safety Messages (BSMs). The collected BSMs were then anonymized before being included here. </p>',11),At={class:"message"},Ut={class:"message-header has-background-grey-lighter has-text-dark no-text-decoration flex is-align-items-center"},Bt={key:0,class:"is-break-words"},Ft={key:0,class:"file-name-text ml-1"},Vt={key:1},Tt={class:"message-body columns"},Pt={class:"column"},Et={class:"field is-horizontal"},Mt={class:"field-body"},Ot={class:"field"},zt={class:"control has-icons-left has-icons-right"},Rt=["onUpdate:modelValue","onBlur","aria-invalid"],Lt={class:"icon is-small is-left"},Jt={key:0,class:"icon is-small is-right"},Ht={key:1,class:"icon is-small is-right"},Yt={class:"field is-horizontal"},qt={class:"field-body"},Gt={class:"field"},Kt={class:"control has-icons-left has-icons-right"},Wt=["onUpdate:modelValue","onBlur","aria-invalid"],Zt={class:"icon is-small is-left"},Xt={key:0,class:"icon is-small is-right"},Qt={key:1,class:"icon is-small is-right"},es={class:"field"},ts={class:"control"},ss=["onUpdate:modelValue","onBlur","aria-invalid"],as={class:"column is-narrow"},os=["onClick"],is={key:1,class:"button is-danger is-small",disabled:""},ns={class:"is-flex mb-4"},ls={key:0,class:"notification is-danger is-light mb-3"},cs=e("p",null,"Your changes could not be saved. You must provide the name and file name for all datasets.",-1),rs=[cs],ds={class:"field is-grouped is-grouped-right"},us={class:"control"},ms=e("button",{class:"button is-primary",type:"submit"},"Save and Continue",-1),ps={__name:"Datasets",setup(t){const i=F(),{datasets:d}=i,{setDatasets:c,markCompletedAndNextStep:p,previousStep:k}=i,h=j([]);H(()=>{h.value=Array.from(d)});const m=L.regex(/^[\w,\s-]+\.[A-Za-z]{3,5}$/),a={title:{required:V},fileName:{required:V,validFile:L.withMessage("Must be a valid file name with an extension",m)},description:{required:V,minLength:re(10)}},f=Y(),v=j(!1),g=()=>{h.value.push(Q()),v.value=!1},D=ee(()=>h.value.length>1),b=y=>{if(D.value){const w=h.value.findIndex($=>$.id===y);h.value[w].isMain||h.value.splice(w,1)}},S=y=>!y.$invalid&&y.$dirty,u=async()=>{if(f.value.$validate(),f.value.$invalid)v.value=!0;else try{c(h.value),p()}catch{v.value=!0}};return(y,w)=>{const $=P("font-awesome-icon");return o(),n(C,null,[It,e("form",{onSubmit:q(u,["prevent"]),class:"mt-4"},[(o(!0),n(C,null,B(h.value,U=>(o(),R(s(te),{key:U.id,state:U,rules:a},{default:O(({v:l})=>[e("div",At,[e("div",Ut,[l.title.$model!==""?(o(),n("p",Bt,[M(N(l.title.$model)+" ",1),l.fileName.$model!==""?(o(),n("span",Ft,N(l.fileName.$model),1)):x("",!0)])):(o(),n("p",Vt," Untitled Dataset "))]),e("div",Tt,[e("div",Pt,[e("div",Et,[e("div",Mt,[e("div",Ot,[e("div",zt,[T(e("input",{class:I(["input is-small",{"is-danger":l.title.$error,"is-success":S(l.title)}]),type:"text",placeholder:"Dataset Title","onUpdate:modelValue":r=>l.title.$model=r,onBlur:l.title.$touch,"aria-invalid":l.title.$error},null,42,Rt),[[E,l.title.$model]]),e("span",Lt,[_($,{icon:"fa-solid fa-font"})]),l.title.$error?(o(),n("span",Jt,[_($,{icon:"fa-solid fa-exclamation-triangle"})])):x("",!0),S(l.title)?(o(),n("span",Ht,[_($,{icon:"fa-solid fa-check"})])):x("",!0)])])])]),e("div",Yt,[e("div",qt,[e("div",Gt,[e("div",Kt,[T(e("input",{spellcheck:"false",autocomplete:"off",class:I(["input is-small",{"is-danger":l.fileName.$error,"is-success":S(l.fileName)}]),type:"text",placeholder:"File Name and Extension","onUpdate:modelValue":r=>l.fileName.$model=r,onBlur:l.fileName.$touch,"aria-invalid":l.fileName.$error},null,42,Wt),[[E,l.fileName.$model]]),e("span",Zt,[_($,{icon:"fa-solid fa-file-pen"})]),l.fileName.$error?(o(),n("span",Xt,[_($,{icon:"fa-solid fa-exclamation-triangle"})])):x("",!0),S(l.fileName)?(o(),n("span",Qt,[_($,{icon:"fa-solid fa-check"})])):x("",!0)]),(o(!0),n(C,null,B(l.fileName.$errors,r=>(o(),n("p",{class:"help is-danger",key:r.$uid},N(r.$message),1))),128))])])]),e("div",es,[e("p",ts,[T(e("textarea",{class:I(["textarea has-fixed-size is-small",{"is-danger":l.description.$error,"is-success":S(l.description)}]),placeholder:"Dataset Description","onUpdate:modelValue":r=>l.description.$model=r,onBlur:l.description.$touch,"aria-invalid":l.description.$error},null,42,ss),[[E,l.description.$model]])]),(o(!0),n(C,null,B(l.description.$errors,r=>(o(),n("p",{class:"help is-danger",key:r.$uid},N(r.$message),1))),128))])]),e("div",as,[D.value?(o(),n("a",{key:0,class:"button is-danger is-small",onClick:r=>b(U.id)},[_($,{icon:"fa-solid fa-trash"})],8,os)):(o(),n("a",is,[_($,{icon:"fa-solid fa-trash"})]))])])])]),_:2},1032,["state"]))),128)),e("div",ns,[e("a",{class:"button is-success is-small",onClick:w[0]||(w[0]=U=>g())},"Add Dataset")]),v.value&&!S(s(f))?(o(),n("div",ls,rs)):x("",!0),e("div",ds,[e("p",us,[e("button",{class:"button is-warning mr-2",onClick:w[1]||(w[1]=U=>s(k)())},"Back"),ms])])],32)],64)}}},hs=e("p",{class:"mb-2"}," Please provide the name, description, and data type of each column that exists in all of your main data files. ",-1),_s=e("p",{class:"mb-4"},[M(" If you are including a column that contains DateTime values and you would like to be able to filter/sort your dataset by these values, please make sure that they are in "),e("a",{href:"https://en.wikipedia.org/wiki/ISO_8601",target:"_blank"},"ISO 8601"),M(" format. ")],-1),fs=["is-open"],gs={class:"message-header has-background-grey-lighter has-text-dark no-text-decoration"},vs={class:"is-break-words mr-2"},bs={class:"file-name-text ml-1"},ys={class:"message-body"},$s={class:"mb-3"},ks={class:"columns"},ws={class:"column"},xs={class:"field is-horizontal"},Ss={class:"field-body"},Cs={class:"field"},Ns={class:"control has-icons-left has-icons-right"},Ds=["onUpdate:modelValue","onBlur","aria-invalid"],js={class:"icon is-small is-left"},Is={key:0,class:"icon is-small is-right"},As={key:1,class:"icon is-small is-right"},Us={class:"field"},Bs={class:"control has-icons-left"},Fs=["onUpdate:modelValue"],Vs=e("option",{value:"",disabled:"",selected:"",hidden:""},"Data Type",-1),Ts=e("option",{value:"Number"},"Number",-1),Ps=e("option",{value:"Text"},"Text",-1),Es=e("option",{value:"calendar_date"},"calendar_date (Date/Time)",-1),Ms=e("option",{value:"Point"},"Point (GPS Coordinate)",-1),Os=e("option",{value:"Checkbox"},"Checkbox (Boolean)",-1),zs=e("option",{value:"URL"},"URL",-1),Rs=[Vs,Ts,Ps,Es,Ms,Os,zs],Ls={class:"icon is-left"},Js={class:"field"},Hs={class:"control"},Ys=["onUpdate:modelValue","onBlur","aria-invalid"],qs={class:"column is-narrow"},Gs=["onClick"],Ks={key:1,class:"button is-danger is-small",disabled:""},Ws=e("hr",{class:"has-background-grey-lighter my-4"},null,-1),Zs={class:"is-flex mb-4"},Xs=["onClick"],Qs={key:0,class:"notification is-danger is-light mb-3"},ea=e("p",null,"Your changes could not be saved. You must complete all fields for each column added.",-1),ta=[ea],sa={class:"field is-grouped is-grouped-right"},aa={class:"control"},oa=e("button",{class:"button is-primary",type:"submit"},"Save and Continue",-1),ia={__name:"DatasetColumns",setup(t){const i=F(),{datasetColumns:d,datasets:c}=i,{setDatasetColumns:p,markCompletedAndNextStep:k,previousStep:h}=i,m=j({});H(()=>{m.value={...d}});const a={name:{required:V},description:{required:V},type:{required:V}},f=Y(),v=j(!1),g=u=>{m.value[u].push(K())},D=(u,y)=>{if(m.value[u].length>1){const w=m.value[u].findIndex($=>$.id===y);m.value[u].splice(w,1)}},b=u=>!u.$invalid&&u.$dirty,S=async()=>{f.value.$validate(),f.value.$invalid?v.value=!0:(p(m.value),k())};return(u,y)=>{const w=P("font-awesome-icon");return o(),n(C,null,[hs,_s,e("form",{onSubmit:q(S,["prevent"])},[(o(!0),n(C,null,B(s(c),($,U)=>(o(),n("article",{class:"message",key:$.id,"is-open":U===0},[e("div",gs,[e("p",vs,[M(N($.title)+" ",1),e("span",bs,N($.fileName),1)])]),e("div",ys,[(o(!0),n(C,null,B(m.value[$.id],l=>(o(),R(s(te),{key:l.id,state:l,rules:a},{default:O(({v:r})=>[e("div",$s,[e("div",ks,[e("div",ws,[e("div",xs,[e("div",Ss,[e("div",Cs,[e("div",Ns,[T(e("input",{class:I(["input is-small",{"is-danger":r.name.$error,"is-success":b(r.name)}]),type:"text",placeholder:"Column Name","onUpdate:modelValue":z=>r.name.$model=z,onBlur:r.name.$touch,"aria-invalid":r.name.$error},null,42,Ds),[[E,r.name.$model]]),e("span",js,[_(w,{icon:"fa-solid fa-table-columns"})]),r.name.$error?(o(),n("span",Is,[_(w,{icon:"fa-solid fa-exclamation-triangle"})])):x("",!0),b(r.name)?(o(),n("span",As,[_(w,{icon:"fa-solid fa-check"})])):x("",!0)])]),e("div",Us,[e("div",Bs,[e("div",{class:I(["select is-small is-fullwidth",{"is-danger":r.type.$error,"is-success":b(r.type)}])},[T(e("select",{name:"datatype","onUpdate:modelValue":z=>r.type.$model=z},Rs,8,Fs),[[ce,r.type.$model]])],2),e("span",Ls,[_(w,{icon:"fa-solid fa-font"})])])])])]),e("div",Js,[e("p",Hs,[T(e("textarea",{class:I(["textarea has-fixed-size is-small",{"is-danger":r.description.$error,"is-success":b(r.description)}]),rows:"2",placeholder:"Column Description","onUpdate:modelValue":z=>r.description.$model=z,onBlur:r.description.$touch,"aria-invalid":r.description.$error},null,42,Ys),[[E,r.description.$model]])])])]),e("div",qs,[m.value[$.id].length>1?(o(),n("a",{key:0,class:"button is-danger is-small",onClick:z=>D($.id,l.id)},[_(w,{icon:"fa-solid fa-trash"})],8,Gs)):(o(),n("a",Ks,[_(w,{icon:"fa-solid fa-trash"})]))])])]),Ws]),_:2},1032,["state"]))),128)),e("div",Zs,[e("a",{class:"button is-success is-small",onClick:l=>g($.id)},"Add Column",8,Xs)])])],8,fs))),128)),v.value&&!b(s(f))?(o(),n("div",Qs,ta)):x("",!0),e("div",sa,[e("p",aa,[e("button",{class:"button is-warning mr-2",onClick:y[0]||(y[0]=$=>s(h)())},"Back"),oa])])],32)],64)}}},na=e("p",{class:"mb-2"}," Please list the names and file extensions of any supplementary files expected in your submission. If you have multiple datasets, then you must associate each supplementary file with one or more datasets. ",-1),la=e("article",{class:"message is-warning"},[e("div",{class:"message-body"},[M(" Make sure your file name includes the full file name and extension "),e("span",{class:"is-italic"},"(e.g. supporting-data.csv)"),M(". If the file name cannot be verified when your project folder is uploaded, you may have to resubmit. ")])],-1),ca={class:"p-4 mb-3 has-background-light"},ra={class:"columns"},da={class:"column"},ua={class:"field is-horizontal"},ma={class:"field-body"},pa={class:"field"},ha={class:"control has-icons-left has-icons-right"},_a=["onUpdate:modelValue","onBlur","aria-invalid"],fa={class:"icon is-small is-left"},ga={key:0,class:"icon is-small is-right"},va={key:1,class:"icon is-small is-right"},ba=e("p",{class:"help"},"Associated dataset(s)",-1),ya={class:"field is-grouped is-grouped-multiline"},$a=["title"],ka=["onUpdate:modelValue","onBlur","aria-invalid","value"],wa={class:"ml-2"},xa={class:"column is-narrow"},Sa=["onClick"],Ca={class:"is-flex mb-4"},Na={key:0,class:"notification is-danger is-light mb-3"},Da=e("p",null,"Your changes could not be saved. Please ensure each supplementary file has a name and is associated with at least one dataset.",-1),ja=[Da],Ia={class:"field is-grouped is-grouped-right"},Aa={class:"control"},Ua=e("button",{class:"button is-primary",type:"submit"},"Save and Continue",-1),Ba={__name:"SupplementaryFiles",setup(t){const i=F(),{fileNames:d,datasets:c}=i,{setFileNames:p,markCompletedAndNextStep:k,previousStep:h}=i,m=j([]);H(()=>{m.value=Array.from(d)});const a=L.regex(/^[\w,\s-]+\.[A-Za-z]{3,5}$/),f={name:{required:V,validFile:L.withMessage("Must be a valid file name with an extension",a)},datasets:{required:V}},v=Y(),g=j(!1),D=()=>{m.value.push(X()),g.value=!1},b=y=>{const w=m.value.findIndex($=>$.id===y);m.value.splice(w,1)},S=y=>!y.$invalid&&y.$dirty,u=async()=>{if(v.value.$validate(),v.value.$invalid)g.value=!0;else{console.log(v);try{p(m.value),k()}catch{g.value=!0}}};return(y,w)=>{const $=P("font-awesome-icon");return o(),n(C,null,[na,la,e("form",{onSubmit:q(u,["prevent"])},[(o(!0),n(C,null,B(m.value,U=>(o(),R(s(te),{key:U.id,state:U,rules:f},{default:O(({v:l})=>[e("div",ca,[e("div",ra,[e("div",da,[e("div",ua,[e("div",ma,[e("div",pa,[e("div",ha,[T(e("input",{class:I(["input is-small",{"is-danger":l.name.$error,"is-success":S(l.name)}]),type:"text",placeholder:"File Name","onUpdate:modelValue":r=>l.name.$model=r,onBlur:l.name.$touch,"aria-invalid":l.name.$error},null,42,_a),[[E,l.name.$model]]),e("span",fa,[_($,{icon:"fa-solid fa-file-pen"})]),l.name.$error?(o(),n("span",ga,[_($,{icon:"fa-solid fa-exclamation-circle"})])):x("",!0),S(l.name)?(o(),n("span",va,[_($,{icon:"fa-solid fa-check"})])):x("",!0)]),(o(!0),n(C,null,B(l.name.$errors,r=>(o(),n("p",{class:"help is-danger",key:r.$uid},N(r.$message),1))),128))])])]),ba,e("div",ya,[(o(!0),n(C,null,B(s(c),r=>(o(),n("p",{class:"control",key:r.id,title:r.title},[e("label",{class:I(["checkbox button is-link is-small",{"is-light":!U.datasets.includes(r.id)}])},[T(e("input",{"onUpdate:modelValue":z=>l.datasets.$model=z,onBlur:l.datasets.$touch,"aria-invalid":l.name.$error,value:r.id,type:"checkbox","aria-":""},null,40,ka),[[me,l.datasets.$model]]),e("span",wa,N(r.title.length>30?r.title.slice(0,15)+"..."+r.title.slice(r.title.length-15):r.title),1)],2)],8,$a))),128))])]),e("div",xa,[e("a",{class:"button is-danger is-small",onClick:r=>b(U.id)},[_($,{icon:"fa-solid fa-trash"})],8,Sa)])])])]),_:2},1032,["state"]))),128)),e("div",Ca,[e("a",{class:"button is-success is-small",onClick:w[0]||(w[0]=U=>D())},"Add File")]),g.value&&!S(s(v))?(o(),n("div",Na,ja)):x("",!0),e("div",Ia,[e("p",Aa,[e("button",{class:"button is-warning mr-2",onClick:w[1]||(w[1]=U=>s(h)())},"Back"),Ua])])],32)],64)}}},Fa=e("p",{class:"mb-2"}," We just need to collect a little bit more information about your project to complete the information section. ",-1),Va=e("hr",null,null,-1),Ta={class:"field"},Pa=e("label",{class:"label mb-0"},"Geographic Area",-1),Ea=e("p",{class:"help mt-0 mb-2"}," Provide a general description of the geographic area where the data are collect. The more detail/specificity you provide, the better it is for other users to understand the location(s) where the data were collected. ",-1),Ma=e("p",{class:"help mt-0 mb-2 is-italic"}," Example: I-81 from Winchester, VA to Front Royal, VA; Leesburg, VA; Florida ",-1),Oa={class:"control has-icons-left has-icons-right"},za=["aria-invalid"],Ra={class:"icon is-small is-left"},La={key:0,class:"icon is-small is-right"},Ja={key:1,class:"icon is-small is-right"},Ha={class:"field"},Ya=e("label",{class:"label mb-0"},"Category",-1),qa=e("p",{class:"help mt-0 mb-2"}," Select a category that represents your project. This will be utilized to search for your project on ITS DataHub. ",-1),Ga={class:"control is-expanded has-icons-left"},Ka={class:"select is-fullwidth"},Wa=["aria-invalid"],Za=le('<option selected value>Select category</option><option value="Automobiles">Automobiles</option><option value="Trucking and Motorcoaches">Trucking and Motorcoaches</option><option value="Transit">Transit</option><option value="Roadway and Bridges">Roadway and Bridges</option><option value="Railroads">Railroads</option><option value="Public Transit">Public Transit</option><option value="Bicycles and Pedestrians">Bicycles and Pedestrians</option>',8),Xa=[Za],Qa={class:"icon is-left"},eo={class:"mb-2"},to=e("label",{class:"label mb-0"},"Tags",-1),so=e("p",{class:"help mt-0 mb-2"}," Provide 5-15 tags for your project. You can use the dropdown below to select from popular tags that may be relevant to your project. Additionally, you can add custom tags by typing into the text box above and hitting enter or comma to create the tag. ",-1),ao=e("p",{class:"help mt-0 mb-2 is-italic"}," Example: pilot project, travel time, connected vehicle message, basic safety message ",-1),oo={key:0,class:"notification is-danger is-light mb-3"},io=e("p",null,"Your changes could not be saved. Please make sure you have filled out every field and you have between 5 and 15 tags.",-1),no=[io],lo={class:"field is-grouped is-grouped-right"},co={class:"control"},ro=e("button",{class:"button is-primary",type:"submit"},"Save and Continue",-1),uo={__name:"AdditionalDetails",setup(t){const i=F(),{additionalDetails:d}=J(i),{markCompletedAndNextStep:c,setAdditionalDetails:p,previousStep:k}=i,h=j({});H(()=>{h.value={...d.value}});const m={category:{required:V},tags:{required:V,minLength:L.withMessage("You must have at least 5 tags",re(5)),maxLength:L.withMessage("Cannot exceed 15 tags",ye(15))},geographicCoverage:{required:V}},a=Y(m,h),f=u=>!u.$invalid&&u.$dirty,v=j(!1),g=async()=>{if(a.value.$validate(),a.value.$invalid)v.value=!0;else try{p(h.value),c()}catch(u){v.value=u}},D=j(""),b=u=>D.value=u,S=ee(()=>jt.filter(u=>a.value.tags.$model&&!a.value.tags.$model.includes(u)&&u.toLowerCase().indexOf(D.value.toLowerCase())>=0));return(u,y)=>{const w=P("font-awesome-icon"),$=P("b-taginput"),U=P("b-field");return o(),n(C,null,[Fa,Va,e("form",{onSubmit:q(g,["prevent"])},[e("div",Ta,[Pa,Ea,Ma,e("p",Oa,[T(e("input",{class:I(["input",{"is-danger":s(a).geographicCoverage.$error,"is-success":f(s(a).geographicCoverage)}]),type:"text",placeholder:"Geographic Coverage","onUpdate:modelValue":y[0]||(y[0]=l=>s(a).geographicCoverage.$model=l),onBlur:y[1]||(y[1]=(...l)=>s(a).geographicCoverage.$touch&&s(a).geographicCoverage.$touch(...l)),"aria-invalid":s(a).geographicCoverage.$error},null,42,za),[[E,s(a).geographicCoverage.$model]]),e("span",Ra,[_(w,{icon:"fa-solid fa-globe"})]),s(a).geographicCoverage.$error?(o(),n("span",La,[_(w,{icon:"fa-solid fa-exclamation-circle"})])):x("",!0),f(s(a).geographicCoverage)?(o(),n("span",Ja,[_(w,{icon:"fa-solid fa-check"})])):x("",!0)]),(o(!0),n(C,null,B(s(a).geographicCoverage.$errors,l=>(o(),n("p",{class:"help is-danger",key:l.$uid},N(l.$message),1))),128))]),e("div",Ha,[Ya,qa,e("div",Ga,[e("div",Ka,[T(e("select",{"onUpdate:modelValue":y[2]||(y[2]=l=>s(a).category.$model=l),onBlur:y[3]||(y[3]=(...l)=>s(a).category.$touch&&s(a).category.$touch(...l)),"aria-invalid":s(a).category.$error,class:I({"is-danger":s(a).category.$error,"is-success":f(s(a).category)})},Xa,42,Wa),[[ce,s(a).category.$model]])]),e("span",Qa,[_(w,{icon:"fa-solid fa-list"})])]),(o(!0),n(C,null,B(s(a).category.$errors,l=>(o(),n("p",{class:"help is-danger",key:l.$uid},N(l.$message),1))),128))]),e("div",eo,[to,so,ao,_(U,{class:"mb-0",type:{"is-danger":s(a).tags.$error,"is-success":f(s(a).tags)}},{default:O(()=>[_($,{data:S.value,autocomplete:"","allow-new":"","open-on-focus":"",icon:"tag",placeholder:"Add a tag",modelValue:s(a).tags.$model,"onUpdate:modelValue":y[4]||(y[4]=l=>s(a).tags.$model=l),onTyping:b,onBlur:s(a).tags.$touch,"aria-invalid":s(a).tags.$error},null,8,["data","modelValue","onBlur","aria-invalid"])]),_:1},8,["type"]),(o(!0),n(C,null,B(s(a).tags.$errors,l=>(o(),n("p",{class:"help is-danger",key:l.$uid},N(l.$message),1))),128))]),v.value&&!f(s(a))?(o(),n("div",oo,no)):x("",!0),e("div",lo,[e("p",co,[e("button",{class:"button is-warning mr-2",onClick:y[5]||(y[5]=l=>s(k)())},"Back"),ro])])],32)],64)}}},mo=e("p",{class:"mb-2"}," Provided below is a summary of the information that was provided. Please review it and correct any errors by going back to a previous step. ",-1),po=e("p",{class:"mb-2"},' If you do not see any errors, you can click the Download button to automatically generate a JSON file and download it to your local device. Alternatively, you can copy and paste the the following text into a JSON file and name it "metadata.json" ',-1),ho=e("p",{class:"mb-2"}," Once you have downloaded the metadata file, place it at the root of your project folder. Now, you can compress your project folder into a zip file and upload it using the signed URL you were provided. ",-1),_o=e("p",null,"Preview",-1),fo={class:"field is-grouped is-grouped-right mt-3"},go={class:"control"},vo={__name:"Summary",setup(t){const{getSummary:i}=J(F()),{previousStep:d,markCompleted:c}=F(),p=j(!1),k=(m,a)=>{const f=JSON.stringify(a,null,4),v="data:application/json;charset=utf-8,"+encodeURIComponent(f),g=document.createElement("a");g.setAttribute("href",v),g.setAttribute("download",m),g.style.display="none",document.body.appendChild(g),g.click(),document.body.removeChild(g)},h=async()=>{p.value=!0,await oe(500),k("metadata.json",i.value),c(),p.value=!1};return(m,a)=>(o(),n(C,null,[mo,po,ho,_(He,null,{title:O(()=>[_o]),body:O(()=>[e("pre",null,N(s(i)),1)]),_:1}),e("div",fo,[e("p",go,[e("button",{class:"button is-warning mr-2",onClick:a[0]||(a[0]=f=>s(d)())},"Back"),e("button",{class:I(["button is-primary",{"is-loading":p.value}]),onClick:a[1]||(a[1]=f=>h())},"Download File",2)])])],64))}};function bo(){return{getItem:t=>sessionStorage.getItem(t),setItem:(t,i)=>{sessionStorage.setItem(t,i)}}}const yo={sessionStorage:bo()},W=[{number:1,progress:10,title:"Confirm Submission",description:"",component:Re},{number:2,progress:20,title:"Project Information",component:xt},{number:3,progress:30,title:"Additional Details",component:uo},{number:4,progress:50,title:"Datasets",component:ps},{number:5,progress:85,title:"Dataset Columns",component:ia},{number:6,progress:95,title:"Supplementary Files",component:Ba},{number:7,progress:100,title:"Summary",component:vo}],F=pe({id:"metadataForm",state:()=>({currentStepNumber:1,nextAvailableStep:1,completedSteps:[0],confirmationStatus:!1,projectInformation:{publisher:"",contactName:"",contactEmail:""},additionalDetails:{category:"",tags:[],geographicCoverage:""},datasets:[],datasetColumns:{},fileNames:[],error:null}),persist:{storage:yo.sessionStorage},getters:{getCurrentStep:t=>W.find(i=>i.number===t.currentStepNumber),isCompleted:t=>i=>t.completedSteps.includes(i),getSummary:t=>{const i={},d=new Set([...t.additionalDetails.tags,"intelligent transportation systems (its)","its joint program office (jpo)"]);return i.projectInformation={...t.projectInformation,category:t.additionalDetails.category,geographicCoverage:t.additionalDetails.geographicCoverage,tags:Array.from(d)},i.datasets=t.datasets.map(c=>({title:c.title,fileName:c.fileName,description:c.description,columns:Object.hasOwn(t.datasetColumns,c.id)?t.datasetColumns[c.id].map(p=>({name:p.name,description:p.description,type:p.type})):[],supplementaryFiles:t.fileNames.filter(p=>p.datasets.includes(c.id)).map(p=>p.name)})),i},getCurrentProgress:t=>{const i=t.completedSteps.reduce((d,c)=>c>d?c:d,0);return i<1?0:W.find(c=>c.number===i).progress}},actions:{init(){this.datasets.length===0&&(this.datasets=[Q()]),this.fileNames.length===0&&(this.fileNames=[X()])},_setStep(t){W.find(i=>i.number===t)&&(this.currentStepNumber=t)},selectStep(t){(this.completedSteps.includes(t)||this.nextAvailableStep===t)&&this._setStep(t)},previousStep(){this._setStep(this.currentStepNumber-1)},nextStep(){this._setStep(this.currentStepNumber+1)},markCompleted(){this.completedSteps.includes(this.currentStepNumber)||this.completedSteps.push(this.currentStepNumber)},markCompletedAndNextStep(){this.markCompleted(),this.nextStep(),this.nextAvailableStep=this.currentStepNumber},setConfirmationStatus(t){this.confirmationStatus=t},setProjectInformation(t){if(Object.keys(this.projectInformation).every(i=>t.hasOwnProperty(i)))console.log("setting project information"),this.projectInformation={...t};else throw"Cannot set project information"},setDatasetInformation(t){if(Object.keys(this.datasetInformation).every(i=>t.hasOwnProperty(i)))this.datasetInformation={...t};else throw"Cannot set dataset information"},setAdditionalDetails(t){if(Object.keys(this.additionalDetails).every(i=>t.hasOwnProperty(i)))this.additionalDetails={...t};else throw"Cannot set additional details"},setDatasets(t){this.datasets=Array.from(t);for(const i of this.datasets)Object.hasOwn(this.datasetColumns,i.id)||(this.datasetColumns[i.id]=[K()])},setDatasetColumns(t){this.datasetColumns={...t}},setFileNames(t){this.fileNames=Array.from(t)},async uploadMetadataForm(t){this.$reset();try{const d={publisher:t.projectInformation.publisher??"",contactName:t.projectInformation.contactName??"",contactEmail:t.projectInformation.contactEmail??""};this.setProjectInformation(d);const c={geographicCoverage:t.projectInformation.geographicCoverage??"",category:t.projectInformation.category??"",tags:t.projectInformation.tags??[]};this.setAdditionalDetails(c)}catch{throw new Error("Invalid metadata file.")}const i=t.datasets??[];if(i.length>0){const d=[],c=[],p={};for(const k of i){const h=Q();h.description=k.description??"",h.fileName=k.fileName??"",h.title=k.title??"",d.push(h);const m=k.columns??[];m.map(f=>{const v=K();return v.name=f.name??"",v.type=f.type??"",v.description=f.description??"",v}),m.length>0?p[h.id]=m:p[h.id]=[K()];const a=k.supplementaryFiles??[];for(const f of a){const v=c.findIndex(g=>g.name===f);if(v>-1)c[v].datasets.push(h.id);else{const g=X();g.name=f,g.datasets.push(h.id),c.push(g)}}}this.setDatasets(d),this.setDatasetColumns(p),c.length>0&&this.setFileNames(c)}}}}),$o={class:"sidebar p-4"},ko=["onClick"],wo={key:1},xo={class:"ml-3"},So={class:"sidebar-step is-uppercase"},Co={class:"sidebar-title is-uppercase"},No={__name:"MetadataSidebar",setup(t){const{getCurrentStep:i,isCompleted:d,nextAvailableStep:c}=J(F()),{selectStep:p}=F();return(k,h)=>(o(),n("aside",$o,[(o(!0),n(C,null,B(s(W),m=>(o(),n("div",{class:"sidebar-wrapper",key:m.number},[e("a",{class:I(["sidebar-item p-2 m-2 is-flex is-align-items-center",{"sidebar-item-active":s(i).number===m.number,"sidebar-item-selectable":s(d)(m.number)||s(c)===m.number}]),onClick:a=>s(p)(m.number)},[e("div",{class:I(["sidebar-icon is-flex-shrink-0",{"sidebar-active":s(i).number===m.number}])},[s(d)(m.number)?(o(),R(s(_e),{key:0,icon:s(he)},null,8,["icon"])):(o(),n("div",wo,N(m.number),1))],2),e("div",xo,[e("p",So,"Step "+N(m.number),1),e("p",Co,N(m.title),1)])],10,ko)]))),128))]))}},Do=ne(No,[["__scopeId","data-v-f3e5cf18"]]),jo={class:"pb-4"},Io={class:"columns is-align-items-center"},Ao={class:"column mt-2"},Uo=["value"],Bo={class:"title is-4 mb-1"},Fo={__name:"MetadataForm",setup(t){const{getCurrentStep:i,getCurrentProgress:d}=J(F());return F(),(c,p)=>(o(),n("div",jo,[e("div",Io,[e("div",Ao,[e("progress",{class:"progress is-primary",value:s(d),max:"100"},N(s(d))+"%",9,Uo)])]),e("h4",Bo,N(s(i).title),1),Z(c.$slots,"default")]))}},Vo={class:"py-6 mb-6"},To={class:"container is-max-desktop"},Po={class:"box"},Eo={class:"columns"},Mo={class:"column is-one-third"},Oo={class:"column is-two-thirds"},zo={__name:"MetadataSubmission",setup(t){const{getCurrentStep:i}=J(F());let d=null;return H(()=>{d=window.sessionStorage}),fe(()=>{d.removeItem("metadataForm")}),(c,p)=>(o(),n("section",Vo,[e("div",To,[e("div",Po,[e("div",Eo,[e("div",Mo,[_(Do)]),e("div",Oo,[_(Fo,null,{default:O(()=>[(o(),R(ge(s(i).component)))]),_:1})])])])])]))}},Jo={__name:"MetadataView",setup(t){const{init:i}=F();return i(),ve({title:"Department of Transportation - ITS DataHub | Metadata Generation",meta:[{name:"description",content:"Generate metadata for a DataHub submission"}]}),(d,c)=>{const p=P("Navigation");return o(),n(C,null,[_(p),e("main",null,[_(zo)])],64)}}};export{Jo as default};
